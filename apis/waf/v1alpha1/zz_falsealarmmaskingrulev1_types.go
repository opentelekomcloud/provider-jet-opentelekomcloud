/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FalsealarmmaskingRuleV1Observation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type FalsealarmmaskingRuleV1Parameters struct {

	// +kubebuilder:validation:Required
	PolicyID *string `json:"policyId" tf:"policy_id,omitempty"`

	// +kubebuilder:validation:Required
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// +kubebuilder:validation:Required
	URL *string `json:"url" tf:"url,omitempty"`
}

// FalsealarmmaskingRuleV1Spec defines the desired state of FalsealarmmaskingRuleV1
type FalsealarmmaskingRuleV1Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FalsealarmmaskingRuleV1Parameters `json:"forProvider"`
}

// FalsealarmmaskingRuleV1Status defines the observed state of FalsealarmmaskingRuleV1.
type FalsealarmmaskingRuleV1Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FalsealarmmaskingRuleV1Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FalsealarmmaskingRuleV1 is the Schema for the FalsealarmmaskingRuleV1s API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,otcjet}
type FalsealarmmaskingRuleV1 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FalsealarmmaskingRuleV1Spec   `json:"spec"`
	Status            FalsealarmmaskingRuleV1Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FalsealarmmaskingRuleV1List contains a list of FalsealarmmaskingRuleV1s
type FalsealarmmaskingRuleV1List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FalsealarmmaskingRuleV1 `json:"items"`
}

// Repository type metadata.
var (
	FalsealarmmaskingRuleV1_Kind             = "FalsealarmmaskingRuleV1"
	FalsealarmmaskingRuleV1_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FalsealarmmaskingRuleV1_Kind}.String()
	FalsealarmmaskingRuleV1_KindAPIVersion   = FalsealarmmaskingRuleV1_Kind + "." + CRDGroupVersion.String()
	FalsealarmmaskingRuleV1_GroupVersionKind = CRDGroupVersion.WithKind(FalsealarmmaskingRuleV1_Kind)
)

func init() {
	SchemeBuilder.Register(&FalsealarmmaskingRuleV1{}, &FalsealarmmaskingRuleV1List{})
}
