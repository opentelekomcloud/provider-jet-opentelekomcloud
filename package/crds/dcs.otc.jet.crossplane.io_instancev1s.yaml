apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: instancev1s.dcs.otc.jet.crossplane.io
spec:
  group: dcs.otc.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - otcjet
    kind: InstanceV1
    listKind: InstanceV1List
    plural: instancev1s
    singular: instancev1
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InstanceV1 is the Schema for the InstanceV1s API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceV1Spec defines the desired state of InstanceV1
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessUser:
                    type: string
                  availableZones:
                    items:
                      type: string
                    type: array
                  backupAt:
                    items:
                      format: int64
                      type: integer
                    type: array
                  backupPolicy:
                    items:
                      properties:
                        backupAt:
                          items:
                            format: int64
                            type: integer
                          type: array
                        backupType:
                          type: string
                        beginAt:
                          type: string
                        periodType:
                          type: string
                        saveDays:
                          format: int64
                          type: integer
                      required:
                      - backupAt
                      - beginAt
                      - periodType
                      type: object
                    type: array
                  backupType:
                    type: string
                  beginAt:
                    type: string
                  capacity:
                    format: int64
                    type: integer
                  configuration:
                    items:
                      properties:
                        parameterId:
                          type: string
                        parameterName:
                          type: string
                        parameterValue:
                          type: string
                      required:
                      - parameterId
                      - parameterName
                      - parameterValue
                      type: object
                    type: array
                  description:
                    type: string
                  engine:
                    type: string
                  engineVersion:
                    type: string
                  maintainBegin:
                    type: string
                  maintainEnd:
                    type: string
                  passwordSecretRef:
                    description: A SecretKeySelector is a reference to a secret key
                      in an arbitrary namespace.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  periodType:
                    type: string
                  productId:
                    type: string
                  saveDays:
                    format: int64
                    type: integer
                  securityGroupId:
                    type: string
                  subnetId:
                    type: string
                  vpcId:
                    type: string
                required:
                - availableZones
                - capacity
                - engine
                - engineVersion
                - passwordSecretRef
                - productId
                - securityGroupId
                - subnetId
                - vpcId
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceV1Status defines the observed state of InstanceV1.
            properties:
              atProvider:
                properties:
                  createdAt:
                    type: string
                  id:
                    type: string
                  internalVersion:
                    type: string
                  ip:
                    type: string
                  maxMemory:
                    format: int64
                    type: integer
                  orderId:
                    type: string
                  port:
                    format: int64
                    type: integer
                  resourceSpecCode:
                    type: string
                  securityGroupName:
                    type: string
                  status:
                    type: string
                  subnetName:
                    type: string
                  usedMemory:
                    format: int64
                    type: integer
                  userId:
                    type: string
                  userName:
                    type: string
                  vpcName:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
